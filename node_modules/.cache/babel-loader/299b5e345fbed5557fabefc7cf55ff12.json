{"ast":null,"code":"import _classCallCheck from \"/home/siva/Downloads/ArjunAcademy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/siva/Downloads/ArjunAcademy/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/siva/Downloads/ArjunAcademy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/siva/Downloads/ArjunAcademy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/siva/Downloads/ArjunAcademy/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/siva/Downloads/ArjunAcademy/src/components/PostList.js\";\nimport React, { Component } from 'react';\nimport { MDBBtn, MDBCardBody, MDBCardImage, MDBCardText, MDBCol } from 'mdbreact';\nimport axios from 'axios';\nimport { MDBCarousel, MDBCarouselCaption, MDBCarouselInner, MDBCarouselItem, MDBView, MDBMask } from 'mdbreact';\n\nvar PostList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostList, _Component);\n\n  function PostList(props) {\n    var _this;\n\n    _classCallCheck(this, PostList);\n\n    // Pass props to parent class\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostList).call(this, props)); // Set initial state\n\n    _this.state = {\n      articles: [],\n      isLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(PostList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Make HTTP reques with Axios\n      axios.get(\"https://newsapi.org/v2/top-headlines?country=in&apiKey=a2f39b1fb611435caaf709ba7aa5f86e\").then(function (res) {\n        var articles = res.data.articles;\n        console.log(articles);\n\n        _this2.setState({\n          articles: articles,\n          isLoaded: true\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"formatDate\",\n    value: function formatDate(date) {\n      var time = new Date(date);\n      var year = time.getFullYear();\n      var day = time.getDate();\n      var hour = time.getHours();\n      var minute = time.getMinutes();\n      var month = time.getMonth() + 1;\n      var composedTime = day + '/' + month + '/' + year + ' | ' + hour + ':' + (minute < 10 ? '0' + minute : minute);\n      return composedTime;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isLoaded = this.state.isLoaded;\n      if (!isLoaded) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Loading.....\"));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        className: \"cardsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.state.articles.map(function (news, i) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        className: \"card\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: news.url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, news.title)), React.createElement(MDBCardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, news.description), React.createElement(\"div\", {\n        className: \"author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(MDBCardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"By \", React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, news.author ? news.author : this.props.default)), React.createElement(MDBCardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.formatDate(news.publishedAt)), React.createElement(MDBBtn, {\n        href: news.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"view\"))), React.createElement(\"div\", {\n        className: \"image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(MDBCardImage, {\n        src: news.urlToImage,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return PostList;\n}(Component);\n\nexport default PostList;","map":{"version":3,"sources":["/home/siva/Downloads/ArjunAcademy/src/components/PostList.js"],"names":["React","Component","MDBBtn","MDBCardBody","MDBCardImage","MDBCardText","MDBCol","axios","MDBCarousel","MDBCarouselCaption","MDBCarouselInner","MDBCarouselItem","MDBView","MDBMask","PostList","props","state","articles","isLoaded","get","then","res","data","console","log","setState","catch","error","date","time","Date","year","getFullYear","day","getDate","hour","getHours","minute","getMinutes","month","getMonth","composedTime","map","news","i","url","title","description","author","default","formatDate","publishedAt","urlToImage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { MDBBtn,  MDBCardBody, MDBCardImage,  MDBCardText, MDBCol } from 'mdbreact';\nimport axios from 'axios';\nimport {\n  MDBCarousel,\n  MDBCarouselCaption,\n  MDBCarouselInner,\n  MDBCarouselItem,\n  MDBView,\n  MDBMask,\n\n} from 'mdbreact';\nclass PostList extends Component {\n  constructor(props) {\n    // Pass props to parent class\n    super(props);\n    // Set initial state\n    this.state = {\n      articles: [],\n      isLoaded: false\n    };\n\n   \n  }\n\n  componentDidMount() {\n\n \n    // Make HTTP reques with Axios\n    axios\n      .get(`https://newsapi.org/v2/top-headlines?country=in&apiKey=a2f39b1fb611435caaf709ba7aa5f86e`)\n      .then(res => {\n        const articles = res.data.articles;\n      \n        console.log(articles);\n        this.setState({ articles: articles ,  isLoaded: true });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n}\n\n  formatDate(date) {\n    var time = new Date(date);\n    var year = time.getFullYear();\n    var day = time.getDate();\n    var hour = time.getHours();\n    var minute = time.getMinutes();\n    var month = time.getMonth() + 1;\n    var composedTime = day + '/' + month + '/' + year + ' | ' + hour + ':' + (minute < 10 ? '0' + minute : minute);\n    return composedTime;\n  }\n\n  \n\n  render() {\n    const { isLoaded} = this.state;\n\n    if (!isLoaded)\n        return <div><center>Loading.....</center></div>;\n    return (\n      <div>\n\n\n           <MDBCol className=\"cardsContainer\">\n        \n        {this.state.articles.map((news, i) => {\n          \n          return (<div>\n\n\n          </div>\n          \n          );\n        })}\n      </MDBCol>\n      <div className=\"card\" key={i}>\n\n     \n<div className=\"content\">\n  \n  <h3>\n    <a href={news.url} target=\"_blank\" rel=\"noopener noreferrer\">\n      {news.title}\n    </a>\n  </h3>\n  <MDBCardBody>{news.description}</MDBCardBody>\n  <div className=\"author\">\n    <MDBCardText>\n      By <i>{news.author ? news.author : this.props.default}</i>\n    </MDBCardText>\n    <MDBCardText>{this.formatDate(news.publishedAt)}</MDBCardText>\n    <MDBBtn href={news.url}>view</MDBBtn>\n   \n  </div>\n</div>\n<div className=\"image\">\n  <MDBCardImage src={news.urlToImage} alt=\"\" />\n</div>\n</div>\n      </div>\n   \n    );\n  }\n}\n\nexport default PostList;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}