{"ast":null,"code":"import _classCallCheck from \"/home/siva/Downloads/ArjunAcademy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/siva/Downloads/ArjunAcademy/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/siva/Downloads/ArjunAcademy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/siva/Downloads/ArjunAcademy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/siva/Downloads/ArjunAcademy/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/siva/Downloads/ArjunAcademy/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/siva/Downloads/ArjunAcademy/src/darkmode.js\";\n\nvar Toggle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Toggle, _React$Component);\n\n  function Toggle(props) {\n    var _this;\n\n    _classCallCheck(this, Toggle);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Toggle).call(this, props));\n    _this.state = {\n      isToggleOn: true\n    }; // This binding is necessary to make `this` work in the callback\n\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Toggle, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.setState(function (state) {\n        return {\n          isToggleOn: !state.isToggleOn\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, this.state.isToggleOn ? 'ON' : 'OFF');\n    }\n  }]);\n\n  return Toggle;\n}(React.Component);\n\nReactDOM.render(React.createElement(Toggle, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/siva/Downloads/ArjunAcademy/src/darkmode.js"],"names":["Toggle","props","state","isToggleOn","handleClick","bind","setState","React","Component","ReactDOM","render","document","getElementById"],"mappings":";;;;;;;;IAEMA,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb,CAFiB,CAIjB;;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AALiB;AAMlB;;;;kCAEa;AACZ,WAAKC,QAAL,CAAc,UAAAJ,KAAK;AAAA,eAAK;AACtBC,UAAAA,UAAU,EAAE,CAACD,KAAK,CAACC;AADG,SAAL;AAAA,OAAnB;AAGD;;;6BAEQ;AACP,aACE;AAAQ,QAAA,OAAO,EAAE,KAAKC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWC,UAAX,GAAwB,IAAxB,GAA+B,KADlC,CADF;AAKD;;;;EArBkBI,KAAK,CAACC,S;;AAwB3BC,QAAQ,CAACC,MAAT,CACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["\n\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isToggleOn: true};\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n  }\n\n  render() {\n    return (\n      <button onClick={this.handleClick}>\n        {this.state.isToggleOn ? 'ON' : 'OFF'}\n      </button>\n    );\n  }\n}\n\nReactDOM.render(\n  <Toggle />,\n  document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}